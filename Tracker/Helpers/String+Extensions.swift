//
//  String+Extensions.swift
//  Tracker
//
//  Created by –ê–ª—å–±–µ—Ä—Ç –•–∞–π–¥–∞—Ä–æ–≤ on 11.01.2024.
//

import Foundation

private let dateTimeDefaultFormatterDate: DateFormatter = {
    let dateFormatter = DateFormatter()
    dateFormatter.dateFormat = "yyyy-MM-dd'T'HH:mm:ssZ"
    dateFormatter.timeZone = TimeZone(secondsFromGMT: 0)
    return dateFormatter
}()

extension String {
    var dateTimeDateFromString: Date? { dateTimeDefaultFormatterDate.date(from: self) }
}

private let dateTimeISO8601FormatterDate: ISO8601DateFormatter = {
    let dateFormatter = ISO8601DateFormatter()
    return dateFormatter
}()

extension String {
    var dateISO8601TimeDateFromString: Date? {dateTimeISO8601FormatterDate.date(from: self)}
    
    static let emojiesCollection = [
        "üôÇ", "üòª", "üå∫", "üê∂", "‚ù§Ô∏è", "üò±",
        "üòá", "üò°", "ü•∂", "ü§î", "üôå", "üçî",
        "ü•¶", "üèì", "ü•á", "üé∏", "üèù", "üò™"
    ]
    
    func weekdayFromInt(_ weekDay: Int) -> String {
        switch weekDay {
        case 1: return "–í—Å"
        case 2: return "–ü–Ω"
        case 3: return "–í—Ç"
        case 4: return "–°—Ä"
        case 5: return "–ß—Ç"
        case 6: return "–ü—Ç"
        case 7: return "–°–±"
        default: break
        }
        return "Weekday"
    }
}
